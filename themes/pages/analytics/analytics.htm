title  = "Dashboard Analytics"
url    = "/analytics"
layout = "default"
is_hidden = 0
==
<?php
use Db;
use Auth;
use Redirect;

/* ------------ onStart ---------------- */
function onStart()
{
    $user = Auth::getUser();

    /* ─── acesso restrito ─── */
    if (!$user || !$user->groups()->whereIn('code',['product_manager','admin'])->exists()) {
        return Redirect::to('/');       // sai para home
    }

    /* ─── administrador? ─── */
    $isAdmin = $user->groups()->where('code','admin')->exists();
    $ownerId = $user->id;

    /* ---------- query produtos ---------- */
    $sql = 'SELECT
               p.id   AS product_id,
               p.name AS product_name,
               COUNT(DISTINCT h.user_id)                                     AS unique_users,
               COUNT(DISTINCT CASE WHEN h.questions_tried>0 THEN h.user_id END) AS users_completed,
               SUM(CASE WHEN l.seen>0 THEN 1 ELSE 0 END)                     AS seen_lines,
               COUNT(l.id)                                                   AS total_lines
            FROM f_products p
            JOIN f_categories c ON c.id=p.id_categories';

    $params = [];
    if (!$isAdmin) {                      // filtra só para gestores
        $sql   .= ' AND c.user_id = ?';
        $params[] = $ownerId;
    }

    $sql .= ' LEFT JOIN f_historic h       ON h.product_id  = p.id
              LEFT JOIN f_historic_lines l ON l.historic_id = h.id
            GROUP BY p.id, p.name
            ORDER BY unique_users DESC';

    $rows = Db::select($sql,$params);

    $general = collect($rows)->map(function($r){
        $r->pct_completed = $r->unique_users
            ? round(100*$r->users_completed/$r->unique_users,1) : 0;
        $r->pct_seen      = $r->total_lines
            ? round(100*$r->seen_lines/$r->total_lines,1) : 0;
        return $r;
    });

    /* ---------- cartões ---------- */
    $sessions = Db::table('f_historic')
                  ->join('f_products','f_historic.product_id','=','f_products.id')
                  ->join('f_categories','f_products.id_categories','=','f_categories.id');

    if (!$isAdmin) $sessions->where('f_categories.user_id',$ownerId);

    $this['totals'] = (object)[
        'num_products'   => $general->count(),
        'total_users'    => $general->sum('unique_users'),
        'total_sessions' => $sessions->count(),
        'avg_completion' => $general->where('pct_completed','>',0)->avg('pct_completed'),
    ];

    $this['general'] = $general;
}

/* ------------ pop-up utilizadores ---------------- */
function onGetUserDetails()
{
    $user = Auth::getUser();
    if (!$user || !$user->groups()->whereIn('code',['product_manager','admin'])->exists()) {
        return ['rows'=>[]];          // sem permissão
    }

    $isAdmin = $user->groups()->where('code','admin')->exists();
    $ownerId = $user->id;
    $pid     = post('product_id');

    $sql = 'SELECT
              u.name,
              (SELECT h2.questions_tried FROM f_historic h2
                WHERE h2.user_id=h.user_id AND h2.product_id=h.product_id
               ORDER BY h2.created_at DESC LIMIT 1)                   AS attempts,
              MAX(CASE WHEN h.questions_tried>0 THEN 100 ELSE 0 END) AS pct_completed,
              100*SUM(CASE WHEN l.seen>0 THEN 1 ELSE 0 END)
                 / NULLIF(COUNT(l.id),0)                             AS pct_seen,
              (SELECT 100*h2.questions_correct/NULLIF(h2.questions_total,0)
                 FROM f_historic h2
                WHERE h2.user_id=h.user_id AND h2.product_id=h.product_id
               ORDER BY h2.created_at DESC LIMIT 1)                  AS pct_correct
            FROM f_historic h
            JOIN users        u ON u.id = h.user_id
            JOIN f_products   p ON p.id = h.product_id
            JOIN f_categories c ON c.id = p.id_categories';
    $params=[];

    if (!$isAdmin){
        $sql.=' AND c.user_id = ?';
        $params[]=$ownerId;
    }

    $sql.=' LEFT JOIN f_historic_lines l ON l.historic_id = h.id
           WHERE h.product_id = ?
           GROUP BY u.id, u.name, h.user_id, h.product_id';

    $params[]=$pid;

    $rows = Db::select($sql,$params);

    return ['rows'=>$rows];
}
?>
==


{# sidebar + conteúdo #}
<div class="flex overflow-hidden" style="height:calc(100vh - 5rem);">
  {% partial 'sidebar_analytics' %}

  <main class="flex-1 overflow-y-auto bg-gray-100">
    {% partial 'analytics/analytics_content' %}
  </main>
</div>
